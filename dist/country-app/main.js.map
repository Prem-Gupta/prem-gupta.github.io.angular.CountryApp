{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/countries/countries.component.css","webpack:///./src/app/countries/countries.component.html","webpack:///./src/app/countries/countries.component.ts","webpack:///./src/app/country.service.ts","webpack:///./src/app/country/country.component.css","webpack:///./src/app/country/country.component.html","webpack:///./src/app/country/country.component.ts","webpack:///./src/app/currency/currency.component.css","webpack:///./src/app/currency/currency.component.html","webpack:///./src/app/currency/currency.component.ts","webpack:///./src/app/language/language.component.css","webpack:///./src/app/language/language.component.html","webpack:///./src/app/language/language.component.ts","webpack:///./src/app/region/region.component.css","webpack:///./src/app/region/region.component.html","webpack:///./src/app/region/region.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".header{\\n    background-color: #04192E;\\n    display: block;\\n    padding: 3%;\\n    color:white;\\n    font-size: 26px;\\n}\"","module.exports = \"<div style=\\\"text-align: center\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row header\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <a style=\\\"color:white\\\">Country Application</a>\\n  \\n        </div>\\n  \\n      </div>\\n  \\n    </div>\\n  </div>\\n  <br />\\n  <br />\\n  <router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClient} from '@angular/common/http';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport {RouterModule,Routes} from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { CountriesComponent } from './countries/countries.component';\nimport { CountryComponent } from './country/country.component';\nimport { RegionComponent } from './region/region.component';\nimport { CountryService } from './country.service';\nimport { CurrencyComponent } from './currency/currency.component';\nimport { LanguageComponent } from './language/language.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CountriesComponent,\n    CountryComponent,\n    RegionComponent,\n    CurrencyComponent,\n    LanguageComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      {path :'region', component: RegionComponent},\n      {path:'', redirectTo:'region',pathMatch:'full'},\n      {path :'region/:regions',component:CountriesComponent},\n      {path :'name/:name',component:CountryComponent},\n      {path :'currency/:name',component:CurrencyComponent},\n      {path :'lang/:name',component:LanguageComponent}\n    ])\n\n  ],\n  providers: [CountryService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".card-header {\\n    border-style: solid;\\n    margin :2%;\\n    padding: 3%;\\n \\n}\\n\\n.card-img-top{\\n    width: 100%;\\n    display:block;\\n    height:250px;\\n   \\n}\\n\\n.card-body .btn{\\n    margin:0 15% 0 15%;\\n}\"","module.exports = \"<div style=\\\"text-align: center\\\">\\n    <div class=\\\"container-fluid\\\">\\n   \\n      <div class=\\\"card row\\\">\\n          <div class=\\\"col-md-6\\\" *ngFor=\\\"let country of currentCountry\\\" >\\n            <div class=\\\"card-header\\\" >\\n             \\n          <img class=\\\"card-img-top img-responsive\\\" src={{country.flag}} alt=\\\"Card image cap\\\">\\n        \\n           \\n        \\n          <ul class=\\\"list-group list-group-flush\\\">\\n              <h5 class=\\\"card-title\\\">Country Name : {{country.name | uppercase}} </h5>\\n            <li class=\\\"list-group-item\\\">Country Capital : {{country.capital}}</li>\\n            <li class=\\\"list-group-item\\\">Country Currency : {{country.currencies[0].name}}</li>\\n            <li class=\\\"list-group-item\\\">Country Timezone : {{country.timezones}}</li>\\n            <li class=\\\"list-group-item\\\">Country SubRegion : {{country.subregion}}</li>\\n            <li class=\\\"list-group-item\\\">Country Language : {{country.languages[0].name}}</li>\\n          </ul>\\n          <div class=\\\"card-body\\\">\\n           <button class=\\\"btn btn-primary\\\" [routerLink]= \\\"['/name',country.name]\\\">View</button> \\n           <button class=\\\"btn btn-primary\\\" (click)=goBackToPreviousPage()>Go Back</button> \\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n    </div>\\n  \\n  </div>\\n\\n\\n \"","import { Component, OnInit } from '@angular/core';\nimport { CountryService } from '../country.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css'],\n  providers:[Location]\n  \n})\nexport class CountriesComponent implements OnInit {\n\n  \n\n  currentCountryCurrency: any;\n  countries: any;\n  currentCountry: any;\n  constructor(\n    private countryService : CountryService,\n    private _route: ActivatedRoute, \n    private router: Router,\n    private location : Location\n  ) { }\n\n  ngOnInit() {\n\n    let myRegion = this._route.snapshot.paramMap.get('regions');\n\n    this.countryService.getSingleRegionInformation(myRegion).subscribe(\n      data => {\n   \n        this.currentCountry = data\n      \n      },\n\n      error =>{\n\n       console.log(\"some error occured\");\n       console.log(error.errorMessage)\n\n      }\n    )\n  }\n\n  public goBackToPreviousPage(): any {\n    this.location.back();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\n\n@Injectable()\nexport class CountryService {\n\n  myResponse: any;\n  public allRegions;\n  public unique_array = [];\n  public baseUrl ='https://restcountries.eu/rest/v2/';\n  constructor(\n    private _http: HttpClient\n  ) { }\n\n  public getAllRegion() : any {\n     this.myResponse = this._http.get(this.baseUrl + 'all/')\n      return this.myResponse;\n  }\n\n  public getRegions(myData) :any{\n  \n      for(let i = 0;i < myData.length; i++){\n          if(this.unique_array.indexOf(myData[i].region) === -1){\n              this.unique_array.push(myData[i].region)\n\n          }\n      }\n      return this.unique_array;\n\n  }\n\n  public getSingleRegionInformation(currentRegion) :any {\n    let myResponse = this._http.get(this.baseUrl+'region/'+currentRegion)\n    return myResponse;\n\n  }\n\npublic getSingleCountryInformation(currentCountry) : any {\n  let myResponse = this._http.get(this.baseUrl+'name/'+currentCountry)\n  return myResponse;\n}\n\npublic allSameCurrencyInformation(currencyCountry) : any{\n\n let myResponse = this._http.get(this.baseUrl+'currency/'+currencyCountry)\n return myResponse;\n}\n\npublic allSameLanguageInformation(currentLanguage) : any {\n  let myResponse = this._http.get(this.baseUrl+'lang/'+currentLanguage)\n  return myResponse;\n}\n}\n\n","module.exports = \".card-header {\\n \\n    margin :2%;\\n    padding: 3%;\\n \\n}\\n\\n.card-img-top{\\n    width: 100%;\\n    display:block;\\n    height:250px;\\n   \\n}\\n\\n.card-body .btn{\\n    margin:0 15% 0 15%;\\n}\"","module.exports = \"<div style=\\\"text-align: center\\\">\\n        <div class=\\\"container-fluid\\\">\\n       \\n          <div class=\\\"card row\\\">\\n              <div class=\\\"col-md-12\\\" *ngFor=\\\"let country of currentCountry\\\" >\\n                <div class=\\\"card-header\\\" >\\n                 \\n              <img class=\\\"card-img-top img-responsive\\\" src={{country.flag}} alt=\\\"Card image cap\\\">\\n            \\n               \\n            \\n              <ul class=\\\"list-group list-group-flush\\\">\\n                  <h5 class=\\\"card-title\\\">Country Name :    {{country.name | uppercase}} </h5>\\n                <li class=\\\"list-group-item\\\">Country Capital :    {{country.capital}}</li>\\n                <li class=\\\"list-group-item\\\">Country Currency :   <a style=\\\"color:black\\\" [routerLink] = \\\"['/currency',country.currencies[0].code]\\\">{{country.currencies[0].name}}</a></li>\\n                <li class=\\\"list-group-item\\\">Country Timezone :   {{country.timezones}}</li>\\n                <li class=\\\"list-group-item\\\">Country SubRegion :   {{country.subregion}}</li>\\n                <li class=\\\"list-group-item\\\">Country Language :   <a style=\\\"color:black\\\" [routerLink]= \\\"['/lang',country.languages[0].iso639_1]\\\">{{country.languages[0].name}}</a></li>\\n                <li class=\\\"list-group-item\\\">Country Population :    {{country.population}}</li>\\n                <li class=\\\"list-group-item\\\">Country Native Name :   {{country.nativeName}}</li>\\n                <li class=\\\"list-group-item\\\">Country Regional Blocs :    {{country.regionalBlocs[0].name}}</li>\\n              </ul>\\n              <div class=\\\"card-body\\\">\\n               <button class=\\\"btn btn-primary\\\" (click)=goBackToPreviousPage()>Go Back</button> \\n              </div>\\n            </div>\\n          </div>\\n      </div>\\n        </div>\\n      \\n      </div>\"","import { Component, OnInit } from '@angular/core';\nimport { CountryService } from '../country.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.css'],\n  providers:[Location]\n})\nexport class CountryComponent implements OnInit {\n\n  currentCountry: any;\n  constructor(\n    private countryService : CountryService,\n    private _route: ActivatedRoute, \n    private router: Router,\n    private location : Location\n  ) { }\n\n  ngOnInit() {\n    let myCountry = this._route.snapshot.paramMap.get('name');\n\n    this.countryService.getSingleCountryInformation(myCountry).subscribe(\n      data => {\n   \n        this.currentCountry = data\n      \n      },\n\n      error =>{\n\n       console.log(\"some error occured\");\n       console.log(error.errorMessage)\n\n      }\n    )\n  }\n  public goBackToPreviousPage(): any {\n    this.location.back();\n  }\n}\n  \n  \n\n\n","module.exports = \".card-header {\\n   border: solid black;\\n    margin :2%;\\n    padding: 3%;\\n \\n}\\n\\n.card-img-top{\\n    width: 100%;\\n    display:block;\\n    height:250px;\\n   \\n}\\n\\n.card-body .btn{\\n    margin:0 15% 0 15%;\\n}\"","module.exports = \"<div style=\\\"text-align: center\\\">\\n    <div class=\\\"container-fluid\\\">\\n   \\n      <div class=\\\"card row\\\">\\n          <div class=\\\"col-md-6\\\" *ngFor=\\\"let country of currencyCountry\\\" >\\n            <div class=\\\"card-header\\\" >\\n             \\n          <img class=\\\"card-img-top img-responsive\\\" src={{country.flag}} alt=\\\"Card image cap\\\">\\n        \\n           \\n        \\n          <ul class=\\\"list-group list-group-flush\\\">\\n              <h5 class=\\\"card-title\\\">Country Name :    {{country.name | uppercase}} </h5>\\n            <li class=\\\"list-group-item\\\">Country Capital :    {{country.capital}}</li>\\n            <li class=\\\"list-group-item\\\">Country Currency :   {{country.currencies[0].name}}</li>\\n            <li class=\\\"list-group-item\\\">Country Timezone :   {{country.timezones}}</li>\\n            <li class=\\\"list-group-item\\\">Country SubRegion :   {{country.subregion}}</li>\\n            <li class=\\\"list-group-item\\\">Country Language :   <a style=\\\"color:black\\\" [routerLink]= \\\"['/lang',country.languages[0].iso639_1]\\\">{{country.languages[0].name}}</a></li>\\n            <li class=\\\"list-group-item\\\">Country Population :    {{country.population}}</li>\\n            <li class=\\\"list-group-item\\\">Country Native Name :   {{country.nativeName}}</li>\\n          </ul>\\n          <div class=\\\"card-body\\\">\\n           <button class=\\\"btn btn-primary\\\" (click)=goBackToPreviousPage()>Go Back</button> \\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n    </div>\\n  \\n  </div>\\n  <router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { CountryService } from '../country.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-currency',\n  templateUrl: './currency.component.html',\n  styleUrls: ['./currency.component.css'],\n  providers:[Location]\n})\nexport class CurrencyComponent implements OnInit {\n\n\n  currencyCountry: any;\n  constructor(\n    private countryService : CountryService,\n    private _route: ActivatedRoute, \n    private router: Router,\n    private location : Location\n  ) { }\n\n  ngOnInit() {\n\n    let myRegionCurrency = this._route.snapshot.paramMap.get('name');\n    console.log(myRegionCurrency)\n\n    this.countryService.allSameCurrencyInformation(myRegionCurrency).subscribe(\n      data => {\n   \n        this.currencyCountry = data\n        console.log(this.currencyCountry)\n      \n      },\n\n      error =>{\n\n       console.log(\"some error occured\");\n       console.log(error.errorMessage)\n\n      }\n    )\n  }\n  public goBackToPreviousPage(): any {\n    this.location.back();\n  }\n\n}\n","module.exports = \".card-header {\\n    border: solid black;\\n     margin :2%;\\n     padding: 3%;\\n  \\n }\\n \\n .card-img-top{\\n     width: 100%;\\n     display:block;\\n     height:250px;\\n    \\n }\\n \\n .card-body .btn{\\n     margin:0 15% 0 15%;\\n }\"","module.exports = \"<div style=\\\"text-align: center\\\">\\n    <div class=\\\"container-fluid\\\">\\n   \\n      <div class=\\\"card row\\\">\\n          <div class=\\\"col-md-6\\\" *ngFor=\\\"let country of languageCountry\\\" >\\n            <div class=\\\"card-header\\\" *ngIf=\\\"country\\\" >\\n             \\n          <img class=\\\"card-img-top img-responsive\\\" src={{country.flag}} alt=\\\"Card image cap\\\">\\n        \\n           \\n        \\n          <ul class=\\\"list-group list-group-flush\\\">\\n              <h5 class=\\\"card-title\\\">Country Name :    {{country.name | uppercase}} </h5>\\n            <li class=\\\"list-group-item\\\">Country Capital :    {{country.capital}}</li>\\n            <li class=\\\"list-group-item\\\" >Country Currency :  <a style=\\\"color:black\\\" [routerLink]= \\\"['/currency',country.currencies[0].code]\\\">{{country.currencies[0].name}}</a> </li>\\n            <li class=\\\"list-group-item\\\">Country Timezone :   {{country.timezones}}</li>\\n            <li class=\\\"list-group-item\\\">Country SubRegion :   {{country.subregion}}</li>\\n            <li class=\\\"list-group-item\\\">Country Language :   {{country.languages[0].name}}</li>\\n            <li class=\\\"list-group-item\\\">Country Population :    {{country.population}}</li>\\n            <li class=\\\"list-group-item\\\">Country Native Name :   {{country.nativeName}}</li>\\n          </ul>\\n          <div class=\\\"card-body\\\">\\n           <button class=\\\"btn btn-primary\\\" (click)=goBackToPreviousPage()>Go Back</button> \\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n    </div>\\n  \\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CountryService } from '../country.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n@Component({\n  selector: 'app-language',\n  templateUrl: './language.component.html',\n  styleUrls: ['./language.component.css'],\n  providers:[Location]\n})\nexport class LanguageComponent implements OnInit {\n\n \n  languageCountry: any;\n  constructor(\n    private countryService : CountryService,\n    private _route: ActivatedRoute, \n    private router: Router,\n    private location : Location\n  ) { }\n\n  ngOnInit() {\n    let myRegionlanguage = this._route.snapshot.paramMap.get('name');\n    console.log(myRegionlanguage)\n\n    this.countryService.allSameLanguageInformation(myRegionlanguage).subscribe(\n      data => {\n   \n        this.languageCountry = data\n        console.log(this.languageCountry)\n      \n      },\n\n      error =>{\n\n       console.log(\"some error occured\");\n       console.log(error.errorMessage)\n\n      }\n    )\n  }\n  public goBackToPreviousPage(): any {\n    this.location.back();\n  }\n\n  }\n\n\n","module.exports = \".card {\\n    border-style: solid;\\n    margin :3%;\\n    padding: 3%;\\n \\n}\"","module.exports = \"<div style=\\\"text-align: center\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\" >\\n        <div class=\\\"col-md-4\\\" *ngFor=\\\"let regions of allRegions\\\">\\n            <div class=\\\"card text-center\\\">\\n                <div class=\\\"card-header\\\">\\n                 <h4>Region : {{regions}}</h4> \\n                </div>\\n                <div class=\\\"card-body\\\">\\n                  <a class=\\\"btn btn-primary\\\" [routerLink] = \\\"['/region', regions]\\\">View</a>\\n                </div>\\n  \\n              </div>\\n              <br />\\n              <br />\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { CountryService } from '../country.service';\nimport { error } from 'protractor';\n@Component({\n  selector: 'app-region',\n  templateUrl: './region.component.html',\n  styleUrls: ['./region.component.css']\n})\nexport class RegionComponent implements OnInit {\n\n  \n  allRegions:any = [] ;\n    constructor(\n    private regionService : CountryService\n  ) { }\n\n  ngOnInit() {\n\n    this.regionService.getAllRegion().subscribe(\n      data => {\n        this.allRegions = this.regionService.getRegions(data);\n        console.log(this.allRegions);\n      },\n\n      error =>{\n\n       console.log(\"some error occured\");\n       console.log(error.errorMessage)\n\n      }\n    )\n  }\n\n  \n\n  }\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}